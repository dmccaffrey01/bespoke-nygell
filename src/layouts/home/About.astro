---
import '/src/styles/layouts/home/about.scss';
import { Image } from 'astro:assets';
import img1 from '/src/assets/sanded-floor-photo-1-before.png';
import img2 from '/src/assets/sanded-floor-photo-1-after.png';
import img3 from '/src/assets/sanded-floor-photo-2-before.png';
import img4 from '/src/assets/sanded-floor-photo-2-after.png';
import img5 from '/src/assets/sanded-floor-photo-3-before.png';
import img6 from '/src/assets/sanded-floor-photo-3-after.png';
---

<section class="home-about-section flex flex-center height-md">
    <div class="sc flex flex-row justify-between align-center">
        <div class="tc flex flex-col align-start gap-150">
            <h2 class="text text-secondary text-xl">
                Clean, Efficient and Reliable <br>
                Floor Sanding Service
            </h2>
            <p class="text text-secondary text-md">
                With years of experience, we specialize in dust-free <br>
                sanding, refinishing, and restoring hardwood floors <br>
                to their original beauty. <span class="new-line"></span>Our skilled team delivers <br>
                high-quality, reliable, and affordable service, <br>
                ensuring flawless results
            </p>
            <a href="/services" class="btn btn-tertiary btn-sm btn-outline text-tertiary">View Our Services</a>
        </div>

        <div class="about-wrapper carousel-wrapper pos-relative flex flex-center flex-col gap-150" data-carousel-position="1">
            <div class="carousel-btn icon-container left pos-absolute">
                <svg xmlns="http://www.w3.org/2000/svg" class="text-secondary" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 0 1 1.414 0L10 10.586l3.293-3.293a1 1 0 1 1 1.414 1.414l-4 4a1 1 0 0 1-1.414 0l-4-4a1 1 0 0 1 0-1.414" clip-rule="evenodd" />
                </svg>
                <span class="sr-only">Chevron Icon</span>
            </div>
            <div class="carousel pos-relative o-hidden br-125">
                <p class="img-text text-white text-md pos-absolute">Before</p>
                <div class="carousel-inner flex flex-row pos-absolute">
                    <div class="carousel-item img-container pos-relative">
                        <Image src={img1} alt="Sanded and Finished Floor 1 Before"></Image>
                        <div class="overlay pos-absolute"></div>
                    </div>
                    <div class="carousel-item img-container pos-relative">
                        <Image src={img2} alt="Sanded and Finished Floor 1 After"></Image>
                        <div class="overlay pos-absolute"></div>
                    </div>
                    <div class="carousel-item img-container pos-relative">
                        <Image src={img3} alt="Sanded and Finished Floor 2 Before"></Image>
                        <div class="overlay pos-absolute"></div>
                    </div>
                    <div class="carousel-item img-container pos-relative">
                        <Image src={img4} alt="Sanded and Finished Floor 2 After"></Image>
                        <div class="overlay pos-absolute"></div>
                    </div>
                    <div class="carousel-item img-container pos-relative">
                        <Image src={img5} alt="Sanded and Finished Floor 3 Before"></Image>
                        <div class="overlay pos-absolute"></div>
                    </div>
                    <div class="carousel-item img-container pos-relative">
                        <Image src={img6} alt="Sanded and Finished Floor 3 After"></Image>
                        <div class="overlay pos-absolute"></div>
                    </div>
                </div>
            </div>
            <div class="carousel-dots flex flex-row gap-50">
                <div class="dot current" data-carousel-position="1"></div>
                <div class="dot" data-carousel-position="2"></div>
                <div class="dot" data-carousel-position="3"></div>
                <div class="dot" data-carousel-position="4"></div>
                <div class="dot" data-carousel-position="5"></div>
                <div class="dot" data-carousel-position="6"></div>
            </div>
            <div class="carousel-btn icon-container right pos-absolute">
                <svg xmlns="http://www.w3.org/2000/svg" class="text-secondary" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 0 1 1.414 0L10 10.586l3.293-3.293a1 1 0 1 1 1.414 1.414l-4 4a1 1 0 0 1-1.414 0l-4-4a1 1 0 0 1 0-1.414" clip-rule="evenodd" />
                </svg>
                <span class="sr-only">Chevron Icon</span>
            </div>
        </div>
    </div>
</section>

<script>
    window.addEventListener("DOMContentLoaded", () => {
        let carouselWrapper = document.querySelector(".about-wrapper");

        if (carouselWrapper instanceof HTMLElement) {
            let leftBtn = carouselWrapper.querySelector(".carousel-btn.left");
            let rightBtn = carouselWrapper.querySelector(".carousel-btn.right");
            let carouselInner = carouselWrapper.querySelector(".carousel-inner");
            let dotsContainer = carouselWrapper.querySelector(".carousel-dots");
            let imgText = carouselWrapper.querySelector(".img-text");

            if (!(dotsContainer instanceof HTMLElement)) {
                return;
            }

            if (!(imgText instanceof HTMLElement)) {
                return;
            }

            if (carouselInner instanceof HTMLElement) {
                let carouselItems = carouselWrapper.querySelectorAll(".carousel-item");
                let firstCarouselItem = carouselItems[0];
                let computedStyleOfCI = window.getComputedStyle(firstCarouselItem);
                let widthOfCI = computedStyleOfCI.width;
                let widthStr = widthOfCI.split("px")[0];
                let widthNum = Number(widthStr);

                let totalTranslateX = widthNum;

                let amountOfItems = carouselItems.length;

                if (leftBtn instanceof HTMLElement && rightBtn instanceof HTMLElement) {
                    leftBtn.addEventListener("click", () => {
                        let newPosition = findNewPosition(carouselWrapper, amountOfItems, "left");
                        moveCarouseltoPosition(carouselWrapper, carouselInner, totalTranslateX, newPosition);
                        moveDots(dotsContainer, newPosition);
                        updateImgText(newPosition, imgText);
                        carouselWrapper.classList.add("autoScrollDisabled")
                    });
                }

                if (rightBtn instanceof HTMLElement && leftBtn instanceof HTMLElement) {
                    rightBtn.addEventListener("click", () => {
                        let newPosition = findNewPosition(carouselWrapper, amountOfItems, "right");
                        moveCarouseltoPosition(carouselWrapper, carouselInner, totalTranslateX, newPosition);
                        moveDots(dotsContainer, newPosition);
                        updateImgText(newPosition, imgText);
                        carouselWrapper.classList.add("autoScrollDisabled")
                    });
                }

                let dots = dotsContainer.querySelectorAll(".dot");

                dots.forEach((dot) => {
                    dot.addEventListener("click", () => {
                        let pos = dot.getAttribute("data-carousel-position");
                        if (pos !== null) {
                            let newPosition = findNewPosition(carouselWrapper, amountOfItems, pos);
                            moveCarouseltoPosition(carouselWrapper, carouselInner, totalTranslateX, newPosition);
                            moveDots(dotsContainer, newPosition);
                            updateImgText(newPosition, imgText);
                            carouselWrapper.classList.add("autoScrollDisabled")
                        }
                        
                    });
                });

                window.setInterval(() => {
                    if (!(carouselWrapper.classList.contains("autoScrollDisabled"))) {
                        let newPosition = findNewPosition(carouselWrapper, amountOfItems, "right");
                        moveCarouseltoPosition(carouselWrapper, carouselInner, totalTranslateX, newPosition);
                        moveDots(dotsContainer, newPosition);
                        updateImgText(newPosition, imgText);
                    }
                }, 4000);
            }
        }
    });

    let findNewPosition = (carouselWrapper: HTMLElement, amountOfItems: number, directionOrNewPosition: number | string) => {
        let position = carouselWrapper.getAttribute("data-carousel-position");
        let positionNum = Number(position);
        let newPosition;

        if (directionOrNewPosition == "left") {
            if (positionNum <= 1) {
                newPosition = amountOfItems;
            } else {
                newPosition = positionNum - 1;
            }
        } else if (directionOrNewPosition == "right") {
            if (positionNum >= amountOfItems) {
                newPosition = 1;
            } else {
                newPosition = positionNum + 1;
            }
        } else {
            newPosition = Number(directionOrNewPosition);
        }
        
        return newPosition;
    }

    let moveCarouseltoPosition = (carouselWrapper: HTMLElement, carouselInner: HTMLElement, totalTranslateX: number, newPosition: number) => {
        let newTranslateXNumber = totalTranslateX * (newPosition - 1) * -1;

        carouselInner.style.transform = `translate(${newTranslateXNumber}px, 0px)`;

        let newPositonStr = String(newPosition);
        carouselWrapper.setAttribute("data-carousel-position", newPositonStr);
    }

    let moveDots = (dotsContainer: HTMLElement, newPosition: number) => {
        let currentDot = dotsContainer.querySelector(".current");
        currentDot?.classList.remove("current");

        let newCurrentDot = dotsContainer.querySelector(`.dot[data-carousel-position="${newPosition}"]`);
        newCurrentDot?.classList.add("current");
    }

    let updateImgText = (newPosition: number, imgText: HTMLElement): void => {
        let texts: Record<string, string> = {
            "1": "Before",
            "2": "After",
            "3": "Before",
            "4": "After",
            "5": "Before",
            "6": "After",
        };

        let strNewPosition = String(newPosition);

        let newText = texts[strNewPosition] || "Default Text";

        imgText.classList.add("fade");

        window.setTimeout(() => {
            imgText.textContent = newText;
            imgText.classList.remove("fade");
        }, 150);
    };

</script>