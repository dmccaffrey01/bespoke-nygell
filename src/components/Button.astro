---
interface Props {
    size?: "xs" | "sm" | "md" | "lg";
    bgColor?: "primary" | "secondary" | "tertiary" | "black" | "white";
    fill?: "filled" | "outline";
    color?: "primary" | "secondary" | "tertiary" | "black" | "white";
    type?: "link" | "button" | "div";
    url?: string;
}

const {  size = "md", bgColor = "tertiary", fill, color = "primary",  type = "div", url} = Astro.props;

const classText = `btn btn-${size} btn-${bgColor} btn-${fill} text-${color}`;
---

{ type === "link" 
? 
    <a class={`${classText}`} href={url}>
        <slot />
    </a>
: type === "button"
?
    <button class={`${classText}`}>
        <slot />
    </button>
:
    <div class={`${classText}`}>
        <slot />
    </div>
}

<style lang="scss">
    .btn-xs {
        padding: 0.6rem 1.75rem;
        border-radius: 0.25rem;
        font-size: 1rem;
        line-height: 1.5rem;
    }

    .btn-sm {
        padding: 0.8rem 2rem;
        border-radius: 0.25rem;
        font-size: 1.25rem;
        line-height: 1.875rem;
    }

    .btn-md {
        padding: 1rem 2.5rem;
        border-radius: 0.5rem;
        font-size: 1.5rem;
        line-height: 2.25rem;
    }

    .btn-lg {
        padding: 1.5rem 3rem;
        border-radius: 1rem;
        font-size: 2rem;
        line-height: 2.5rem;
    }

    $btn-colors: (
        "btn-primary": var(--color-primary),
        "btn-primary-darker": var(--color-primary-darker),
        "btn-secondary": var(--color-secondary),
        "btn-tertiary": var(--color-tertiary),
        "btn-white": var(--color-white),
        "btn-black": var(--color-black)
    );


    .btn {
        display: flex;
        align-items: center;
        font-weight: 600;
        @each $key, $value in $btn-colors {
            &.#{$key} {
                &.btn-filled {
                    background-color: $value;
                }

                &.btn-outline {
                    outline: 4px solid $value;
                    outline-offset: -4px;
                    background-color: transparent;
                }
            }
        }
    }

    $text-colors: (
        "text-primary": var(--color-primary),
        "text-primary-darker": var(--color-primary-darker),
        "text-secondary": var(--color-secondary),
        "text-tertiary": var(--color-tertiary),
        "text-white": var(--color-white),
        "text-black": var(--color-black)
    );

    @each $key, $value in $text-colors {
        .#{$key} {
            color: $value;
        }
    }
</style>