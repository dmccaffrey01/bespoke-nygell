---
interface Props {
    size?: "xs" | "sm" | "md" | "lg" | "xl" | "2xl";
    color?: "primary" | "secondary" | "tertiary" | "black" | "white";
    type?: "heading" | "subheading" | "normal";
}

const { size = "md", color = "secondary", type = "normal" } = Astro.props;

const classText = `text text-${size} text-${color}`;
---

{ type === "heading" 
? 
    <h2 class={`${classText}`}>
        <slot />
    </h2>
: type === "subheading"
?
    <h3 class={`${classText}`}>
        <slot />
    </h3>
:
    <p class={`${classText}`}>
        <slot />
    </p>
}

<style lang="scss">
    .text-xs {
        font-size: 1rem;
        line-height: 1.5rem;
    }

    .text-sm {
        font-size: 1.25rem;
        line-height: 1.875rem;
    }

    .text-md {
        font-size: 1.5rem;
        line-height: 2.25rem;
    }

    .text-lg {
        font-size: 2rem;
        line-height: 2.5rem;
    }

    .text-xl {
        font-size: 3rem;
        line-height: 3.75rem;
        font-family: var(--ff-heading);
    }

    .text-2xl {
        font-size: 4rem;
        line-height: 5rem;
        font-family: var(--ff-heading);
    }

    $text-colors: (
        "text-primary": var(--color-primary),
        "text-primary-darker": var(--color-primary-darker),
        "text-secondary": var(--color-secondary),
        "text-tertiary": var(--color-tertiary),
        "text-white": var(--color-white),
        "text-black": var(--color-black)
    );

    @each $key, $value in $text-colors {
        .#{$key} {
            color: $value;
        }
    }

</style>